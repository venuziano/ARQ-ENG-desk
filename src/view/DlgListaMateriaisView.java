/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import apoio.Calculos;
import apoio.GerenciarLog;
import dao.FacesDAO;
import dao.MateriaisDAO;
import dao.MateriaisFaceDAO;
import entidade.Faces;
import entidade.Materiais;
import entidade.MateriaisFace;
import entidade.MateriaisFacePK;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rrs
 */
public class DlgListaMateriaisView extends javax.swing.JDialog {

    EntityManagerFactory factory = Persistence.createEntityManagerFactory("ARQ_ENGPU");
    MateriaisDAO dao = new MateriaisDAO(factory);
    MateriaisFaceDAO daoMf = new MateriaisFaceDAO(factory);
    FacesDAO daoF = new FacesDAO(factory);
    
    Materiais materiais = new Materiais();
    MateriaisFace materiaisFace = new MateriaisFace();
    Faces face = new Faces();
    MateriaisFacePK materiaisFacePK = new MateriaisFacePK();
    
    DlgFacesView dlgFaces;
    
    GerenciarLog log = new GerenciarLog();
    Calculos calculos = new Calculos();
    
    public DlgListaMateriaisView(java.awt.Frame parent, boolean modal, Faces face, DlgFacesView dlg) throws IOException {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        renderizarTabela();
        
        this.face = face;
        this.dlgFaces = dlg;
        
        tfEspessura.setEnabled(false);
        tfTransmitanciaV.setEnabled(false);
        tfFatorSolarV.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void salvarOpaco() throws IOException {
        try {
            if (!tfEspessura.getText().isEmpty()) {
                //confere se o material já está vinculado a face.
                for (MateriaisFace mf : face.getMateriaisFaceCollection()) {
                    if (materiais.getId().equals(mf.getMateriaisFacePK().getMateriaisId())) {
                        JOptionPane.showMessageDialog(this, "Material já adicionado na face!");
                        return;
                    }
                }
                materiaisFace.setEspessura(Double.parseDouble(tfEspessura.getText()));
                //cálcula a resistência do material de acordo com a condutividade já inserida no mesmo dividido a espessura do tfEspessura
                Double espessura = Double.parseDouble(tfEspessura.getText());
                Double condutividade = materiais.getCondutividade();
                materiaisFace.setResistencia((espessura / condutividade));
                materiaisFacePK.setFacesId(face.getId());
                materiaisFacePK.setMateriaisId(materiais.getId());
                materiaisFace.setMateriaisFacePK(materiaisFacePK);
                daoMf.salvar(materiaisFace);
                this.dispose();
                JOptionPane.showMessageDialog(this, "Material adicionado a face com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um material da lista!");
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    private void salvarTransparente() throws IOException {
        try {
            if (!tfFatorSolarV.getText().isEmpty() && !tfTransmitanciaV.getText().isEmpty()) {
                //confere se o material já está vinculado a face.
                for (MateriaisFace mf : face.getMateriaisFaceCollection()) {
                    if (materiais.getId().equals(mf.getMateriaisFacePK().getMateriaisId())) {
                        JOptionPane.showMessageDialog(this, "Material já adicionado na face!");
                        return;
                    }
                }
                materiaisFacePK.setFacesId(face.getId());
                materiaisFacePK.setMateriaisId(materiais.getId());
                materiaisFace.setMateriaisFacePK(materiaisFacePK);
                face.setTransmitancia(Double.parseDouble(tfTransmitanciaV.getText()));
                face.setFatorSolar(Double.parseDouble(tfFatorSolarV.getText()));
                daoMf.salvar(materiaisFace);
                daoF.atualizar(face);
                this.dispose();
                JOptionPane.showMessageDialog(this, "Material adicionado a face com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um material da lista!");
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    public void renderizarTabela() throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbMateriais.getModel();

        tabela.setNumRows(0);

        tbMateriais.setRowSorter(new TableRowSorter(tabela));
        tbMateriais.setDefaultEditor(Object.class, null);

        montaTabela();
    }

    private void montaTabela() throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbMateriais.getModel();

        tabela.setNumRows(0);
        String tipo = "";
        try {
            for (Materiais m : dao.findMateriaisEntities()) {
                if (m.getTipo() == 0) {
                    tipo = "Translucído";
                } else {
                    tipo = "Opaco";
                }
                tabela.addRow(new Object[]{
                    m.getId(),
                    m.getNome(),
                    tipo,
                    m.getCondutividade(),
                    m.getInfo()

                });
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    private Materiais findMateriais(int id){
        return dao.findMateriais(id);
    }

    private void pesquisar(String desc) throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbMateriais.getModel();

        tabela.setNumRows(0);
        String tipo = "";
        try {
            for (Materiais m : dao.buscaMateriais(desc)) {
                if (m.getTipo() == 0) {
                    tipo = "Translucído";
                } else {
                    tipo = "Opaco";
                }
                tabela.addRow(new Object[]{
                    m.getId(),
                    m.getNome(),
                    tipo,
                    m.getCondutividade(),
                    m.getInfo()

                });
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }

    }

     private void populaMaterial() throws IOException {
        try{
        if (tbMateriais.getSelectedRow() != -1) {
             materiais = findMateriais(((int) tbMateriais.getValueAt(tbMateriais.getSelectedRow(), 0)));
             dao.setOldEntidade(materiais);
             
             if(materiais.getTipo() == 0) {
                 tfEspessura.setEnabled(false);
                 tfTransmitanciaV.setEnabled(true);
                 tfFatorSolarV.setEnabled(true);
             } else if (materiais.getTipo() == 1) {
                 tfEspessura.setEnabled(true);
                 tfTransmitanciaV.setEnabled(false);
                 tfFatorSolarV.setEnabled(false);
             }
        }
        }catch (Exception e){
            log.get_log(e.toString());
        }
            
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMateriais = new javax.swing.JTable();
        btFechar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfPesquisar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfEspessura = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfTransmitanciaV = new javax.swing.JTextField();
        tfFatorSolarV = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista Materiais Disponíveis");

        btPesquisar.setText("pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        tbMateriais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Tipo", "Condutividade", "Informações"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMateriais.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMateriaisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMateriais);
        if (tbMateriais.getColumnModel().getColumnCount() > 0) {
            tbMateriais.getColumnModel().getColumn(4).setResizable(false);
        }

        btFechar.setText("Fechar");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Lista de Materiais:");

        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        jLabel2.setText("Espessura do material* :");

        jLabel3.setText("Transmitância do vidro*:");

        jLabel4.setText("Fator solar do vidro*:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(396, 396, 396)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(594, 594, 594)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfEspessura, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfTransmitanciaV)
                                    .addComponent(tfFatorSolarV, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(263, 263, 263)
                        .addComponent(btFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfEspessura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfTransmitanciaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfFatorSolarV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btFechar)
                    .addComponent(btAdicionar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        try {
            pesquisar(tfPesquisar.getText());
        } catch (IOException ex) {
            Logger.getLogger(DlgListaMateriaisView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void tbMateriaisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMateriaisMouseClicked
        try {
            populaMaterial();
        } catch (IOException ex) {
            Logger.getLogger(DlgProjetosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbMateriaisMouseClicked

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        this.dispose();
        try {
            dlgFaces.renderizarTabelaFaces();
            dlgFaces.renderizarTabelaMateriaisFace();
        } catch (IOException ex) {
            Logger.getLogger(DlgListaMateriaisView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btFecharActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        try {
            if (materiais.getTipo() == 0) {
                salvarTransparente();
            } else if (materiais.getTipo() == 1) {
                salvarOpaco();
                calculos.calcularRtFaceAddMaterial(face);   
            }
        } catch (Exception ex) {
            Logger.getLogger(DlgListaMateriaisView.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            dlgFaces.atualizaComodo();
            dlgFaces.renderizarTabelaFaces();
            dlgFaces.renderizarTabelaMateriaisFace();
        } catch (IOException ex) {
            Logger.getLogger(DlgCriarComodosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAdicionarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DlgListaMateriaisView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DlgListaMateriaisView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DlgListaMateriaisView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DlgListaMateriaisView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                DlgListaMateriaisView dialog = null;
//                dialog = new DlgListaMateriaisView(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbMateriais;
    private javax.swing.JTextField tfEspessura;
    private javax.swing.JTextField tfFatorSolarV;
    private javax.swing.JTextField tfPesquisar;
    private javax.swing.JTextField tfTransmitanciaV;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import apoio.Calculos;
import apoio.GerenciarLog;
import dao.ComodosProjetosDAO;
import dao.FacesDAO;
import dao.MateriaisDAO;
import dao.MateriaisFaceDAO;
import entidade.ComodosProjetos;
import entidade.Faces;
import entidade.Materiais;
import entidade.MateriaisFace;
import entidade.MateriaisFacePK;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rrs
 */
public class DlgFacesView extends javax.swing.JDialog {

    EntityManagerFactory factory = Persistence.createEntityManagerFactory("ARQ_ENGPU");
    MateriaisDAO daoM = new MateriaisDAO(factory);
    FacesDAO daoF = new FacesDAO(factory);
    MateriaisFaceDAO daoMf = new MateriaisFaceDAO(factory);
    ComodosProjetosDAO daoC = new ComodosProjetosDAO(factory);
    
    Materiais materiais = new Materiais();
    Faces faces = new Faces();
    MateriaisFace materiaisFace =  new MateriaisFace();
    MateriaisFacePK materiaisFacePk = new MateriaisFacePK();
    ComodosProjetos comodo = new ComodosProjetos();
    
    GerenciarLog log = new GerenciarLog();
    Calculos calculos = new Calculos();
    
    public DlgFacesView(java.awt.Frame parent, boolean modal, ComodosProjetos comodo) throws IOException {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.comodo = comodo;
        renderizarTabelaFaces();
        
        btAddMaterialFace.setEnabled(false);
        btRemoverMaterialFace.setEnabled(false);
        lbValorCargaTermicaT.setText(String.valueOf(this.comodo.getCargaTermicaT()));
        
        //desabilita as actions se o projeto estiver finalizado.
        if(comodo.getRefProjeto().getSituacao() == 2)
        {
        btNova.setEnabled(false);
        btEditar.setEnabled(false);
        btExcluir.setEnabled(false);
        btCalcular.setEnabled(false);
        }
        if(this.comodo.getBtus() != null){
        lbBtus.setText(String.valueOf(this.comodo.getBtus()));
        }
        if(this.comodo.getCargaTermicaT() != null){
        lbValorCargaTermicaT.setText(String.valueOf(this.comodo.getCargaTermicaT()));
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void excluirMaterialFace() throws Exception {
        try {
            if (tbMateriaisFace.getSelectedRow() != -1) {
                int confirm = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir?");
                if (confirm == JOptionPane.YES_OPTION) {
                    daoMf.excluirPk(materiaisFace);
                    calculos.calcularRtFaceExcluiMaterial(faces);
                    JOptionPane.showMessageDialog(this, "Cadastro excluido com sucesso!");
                }
                if (confirm == JOptionPane.NO_OPTION) {
                    renderizarTabelaFaces();
                    renderizarTabelaMateriaisFace();
                }
                if (confirm == JOptionPane.CANCEL_OPTION) {
                    renderizarTabelaFaces();
                    renderizarTabelaMateriaisFace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um item da tabela!");
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    private void excluirFace() throws Exception {
        try {
            if (tbfaces.getSelectedRow() != -1) {
                int confirm = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir?");
                if (confirm == JOptionPane.YES_OPTION) {
                    daoF.excluir(faces, faces.getId());
//                    calculos.calcularRtFaceExcluiMaterial(faces); RECALCULAR A CARGA TERMICA DO AMBIENTE
                    JOptionPane.showMessageDialog(this, "Cadastro excluido com sucesso!");
                    
                }
                if (confirm == JOptionPane.NO_OPTION) {
                    renderizarTabelaFaces();
                    renderizarTabelaMateriaisFace();
                }
                if (confirm == JOptionPane.CANCEL_OPTION) {
                    renderizarTabelaFaces();
                    renderizarTabelaMateriaisFace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um item da tabela!");
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    public void renderizarTabelaFaces() throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbfaces.getModel();

        tabela.setNumRows(0);

        tbfaces.setRowSorter(new TableRowSorter(tabela));
        tbfaces.setDefaultEditor(Object.class, null);

        montaTabelaFaces();
    }

    private void montaTabelaFaces() throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbfaces.getModel();

        tabela.setNumRows(0);
        
        try {
            for (Faces f : this.comodo.getFacesCollection()) {
                String normalizaTipo = "";
                switch (f.getTipo()) {
                    case 0:
                        normalizaTipo = "Parede";
                        break;
                    case 1:
                        normalizaTipo = "Cobertura";
                        break;
                    case 2:
                        normalizaTipo = "Laje inferior";
                        break;
                    default:
                        break;
                }
                tabela.addRow(new Object[]{
                    f.getId(),
                    f.getDescricao(),
                    normalizaTipo,
                    f.getOrientacaoSolar(),
                    f.getResistenciaTotal(),
                    f.getTransmitancia(),
                    f.getArea(),
                    f.getFluxoOpaco(),
                    f.getFluxoTransparente(),
                    f.getFatorSolar()
                });
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    public void atualizarTabelaFaces(ComodosProjetos c) throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbfaces.getModel();

        tabela.setNumRows(0);

        tbfaces.setRowSorter(new TableRowSorter(tabela));
        tbfaces.setDefaultEditor(Object.class, null);
        
        montaTabelaFacesAtualizada(c);
    }

    private void montaTabelaFacesAtualizada(ComodosProjetos c) throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbfaces.getModel();

        tabela.setNumRows(0);
        
        try {
            for (Faces f : c.getFacesCollection()) {
                String normalizaTipo = "";
                switch (f.getTipo()) {
                    case 0:
                        normalizaTipo = "Parede";
                        break;
                    case 1:
                        normalizaTipo = "Cobertura";
                        break;
                    case 2:
                        normalizaTipo = "Laje inferior";
                        break;
                    default:
                        break;
                }
                tabela.addRow(new Object[]{
                    f.getId(),
                    f.getDescricao(),
                    normalizaTipo,
                    f.getOrientacaoSolar(),
                    f.getResistenciaTotal(),
                    f.getTransmitancia(),
                    f.getArea(),
                    f.getFluxoOpaco(),
                    f.getFluxoTransparente(),
                    f.getFatorSolar()
                });
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    public void renderizarTabelaMateriaisFace() throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbMateriaisFace.getModel();

        tabela.setNumRows(0);

        tbMateriaisFace.setRowSorter(new TableRowSorter(tabela));
        tbMateriaisFace.setDefaultEditor(Object.class, null);

        montaTabelaMateriaisFaces();
    }

    private void montaTabelaMateriaisFaces() throws IOException {
        DefaultTableModel tabela = (DefaultTableModel) tbMateriaisFace.getModel();

        tabela.setNumRows(0);
        
        faces.setMateriaisFaceCollection(daoMf.buscaMaterialPorFace(faces.getId()));
        
        try {
            for (MateriaisFace mf : faces.getMateriaisFaceCollection()) {
                tabela.addRow(new Object[]{
                    mf.getMateriais().getNome(),
                    mf.getEspessura(),
                    mf.getMateriais().getCondutividade(),
                    mf.getResistencia()
                });
            }
        } catch (Exception e) {
            log.get_log(e.toString());
        }
    }
    
    protected void atualizaValorCargaTermica() throws Exception {
        this.comodo = daoC.findComodos(this.comodo.getId());
        lbValorCargaTermicaT.setText(String.valueOf(this.comodo.getCargaTermicaT()));
        lbBtus.setText(String.valueOf(calculaAr()));
    }
    
    private Double calculaAr() throws Exception {
        this.comodo.setBtus((3412 * this.comodo.getCargaTermicaT()) / 1000);
        daoC.atualizar(this.comodo);
        return this.comodo.getBtus();
    }
    
    protected void atualizaComodo() {
        this.comodo = daoC.findComodos(this.comodo.getId());
    }
    
    private Faces findFaces(int id){
        return daoF.findFaces(id);
    }
    
    private void pesquisar(String desc) throws IOException {
//        DefaultTableModel tabela = (DefaultTableModel) tbfaces.getModel();
//
//        tabela.setNumRows(0);
//
//        try {
//            for (Materiais m : dao.buscaMateriais(desc)) {
//                tabela.addRow(new Object[]{
//                    m.getId(),
//                    m.getNome(),
//                    m.getTipo(),
//                    m.getCondutividade(),
//                    m.getInfo()
//
//                });
//            }
//        } catch (Exception e) {
//            log.get_log(e.toString());
//        }

    }

     private void populaFace() throws IOException {
        try{
        if (tbfaces.getSelectedRow() != -1) {
              int idFace = ((int) tbfaces.getValueAt(tbfaces.getSelectedRow(), 0));
              faces = findFaces(idFace);
              faces.setMateriaisFaceCollection(daoMf.buscaMaterialPorFace(idFace));
              
              //apenas habilita as actions se o projeto estiver em andamento.
              if(comodo.getRefProjeto().getSituacao() == 1){
              btAddMaterialFace.setEnabled(true);
              btRemoverMaterialFace.setEnabled(true);
            }
        }
        }catch (Exception e){
            log.get_log(e.toString());
        }
    }
     
     private void populaMaterialFace() throws IOException {
        try{
        if (tbMateriaisFace.getSelectedRow() != -1) {
              materiaisFace.setEspessura((Double) tbMateriaisFace.getValueAt(tbMateriaisFace.getSelectedRow(), 1));
              materiaisFace.setResistencia((Double) tbMateriaisFace.getValueAt(tbMateriaisFace.getSelectedRow(), 3));
              materiaisFacePk.setFacesId(faces.getId());
              try {
                    for (Materiais m : daoM.buscaIdMaterialFace(tbMateriaisFace.getValueAt(tbMateriaisFace.getSelectedRow(), 0).toString())) {
                        materiaisFacePk.setMateriaisId(m.getId());
                    }
                } catch (Exception e) {
                    log.get_log(e.toString());
                }
                materiaisFace.setMateriaisFacePK(materiaisFacePk);
            }
        }catch (Exception e){
            log.get_log(e.toString());
        }
     }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btNova = new javax.swing.JButton();
        btPesquisar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbfaces = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfPesquisar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbMateriaisFace = new javax.swing.JTable();
        btAddMaterialFace = new javax.swing.JButton();
        btRemoverMaterialFace = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbValorCargaTermicaT = new javax.swing.JLabel();
        btCalcular = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lbBtus = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editor de Faces");

        btNova.setText("Novo");
        btNova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovaActionPerformed(evt);
            }
        });

        btPesquisar.setText("pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        tbfaces.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Tipo", "Orientação", "Resistência Total", "Transmitância", "Área Total", "Fluxo de Calor Opaco", "Fluxo de Calor Translúcido", "Fator Solar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbfaces.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbfacesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbfaces);
        if (tbfaces.getColumnModel().getColumnCount() > 0) {
            tbfaces.getColumnModel().getColumn(0).setPreferredWidth(4);
            tbfaces.getColumnModel().getColumn(2).setPreferredWidth(45);
            tbfaces.getColumnModel().getColumn(3).setPreferredWidth(10);
            tbfaces.getColumnModel().getColumn(4).setPreferredWidth(40);
            tbfaces.getColumnModel().getColumn(5).setPreferredWidth(40);
            tbfaces.getColumnModel().getColumn(6).setPreferredWidth(40);
        }

        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Lista de Faces:");

        tbMateriaisFace.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Espessura", "Condutividade", "Resistência"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbMateriaisFace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMateriaisFaceMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbMateriaisFace);

        btAddMaterialFace.setText("Adicionar");
        btAddMaterialFace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddMaterialFaceActionPerformed(evt);
            }
        });

        btRemoverMaterialFace.setText("Remover");
        btRemoverMaterialFace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverMaterialFaceActionPerformed(evt);
            }
        });

        jLabel4.setText("Lista de Materiais:");

        jLabel5.setText("Lista de Faces:");

        jLabel2.setText("Carga Térmica Total do Comodo:");

        lbValorCargaTermicaT.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        btCalcular.setText("Calcular Carga Térmica");
        btCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularActionPerformed(evt);
            }
        });

        jLabel3.setText("BTU / H:");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Lista de Materiais da Face:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btNova, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btCalcular)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(278, 278, 278)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbBtus, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbValorCargaTermicaT, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(85, 85, 85)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAddMaterialFace)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemoverMaterialFace)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(524, 524, 524)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btPesquisar)
                    .addComponent(jLabel5)
                    .addComponent(tfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btAddMaterialFace)
                                .addComponent(btRemoverMaterialFace))
                            .addComponent(lbValorCargaTermicaT, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(btCalcular)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 14, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(lbBtus, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btExcluir)
                            .addComponent(btEditar)
                            .addComponent(btNova))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNovaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovaActionPerformed
        DlgCriarFacesView dlg;
        try {
            dlg = new DlgCriarFacesView(null, true, this, this.comodo);
            dlg.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btNovaActionPerformed

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        try {
            pesquisar(tfPesquisar.getText());
        } catch (IOException ex) {
            Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        if (tbfaces.getSelectedRow() != -1) {
        int id = (int) tbfaces.getValueAt(tbfaces.getSelectedRow(), 0);
        
        Faces face = daoF.findFaces(id);
        
            try
            {
                DlgCriarFacesView dlg = new DlgCriarFacesView(null, true, this, this.comodo, face);
                dlg.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }   else {
            JOptionPane.showMessageDialog(this, "Selecione um item da tabela!");
        }
    }//GEN-LAST:event_btEditarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        try {
            excluirFace();
        } catch (Exception ex) {
            Logger.getLogger(DlgProjetosView.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            atualizaComodo();
            renderizarTabelaFaces();
            renderizarTabelaMateriaisFace();
        } catch (IOException ex) {
            Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void tbfacesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbfacesMouseClicked
        try {
            populaFace();
        } catch (IOException ex) {
            Logger.getLogger(DlgProjetosView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            renderizarTabelaMateriaisFace();
        } catch (IOException ex) {
            Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbfacesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tbMateriaisFaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMateriaisFaceMouseClicked
        try {
            populaMaterialFace();
        } catch (IOException ex) {
            Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbMateriaisFaceMouseClicked

    private void btAddMaterialFaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddMaterialFaceActionPerformed
        try {
            populaFace();
        } catch (IOException ex) {
            Logger.getLogger(DlgProjetosView.class.getName()).log(Level.SEVERE, null, ex);
        }

        DlgListaMateriaisView dlg;
        try {
            dlg = new DlgListaMateriaisView(null, true, faces, this);
            dlg.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAddMaterialFaceActionPerformed

    private void btRemoverMaterialFaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverMaterialFaceActionPerformed
        try {
            excluirMaterialFace();
            renderizarTabelaFaces();
            renderizarTabelaMateriaisFace();
        } catch (Exception ex) {
            Logger.getLogger(DlgProjetosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btRemoverMaterialFaceActionPerformed

    private void btCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularActionPerformed
        try{
        DlgCalcularCargaTermica dlg = new DlgCalcularCargaTermica(null, true, this, this.comodo);
        dlg.setVisible(true);
        } catch (Exception e) {
            Logger.getLogger(DlgFacesView.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btCalcularActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddMaterialFace;
    private javax.swing.JButton btCalcular;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNova;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btRemoverMaterialFace;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbBtus;
    private javax.swing.JLabel lbValorCargaTermicaT;
    private javax.swing.JTable tbMateriaisFace;
    private javax.swing.JTable tbfaces;
    private javax.swing.JTextField tfPesquisar;
    // End of variables declaration//GEN-END:variables
}
